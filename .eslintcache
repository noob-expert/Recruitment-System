[{"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\index.js":"1","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\App.js":"2","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\login\\index.jsx":"3","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\main\\index.jsx":"4","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\index.js":"5","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\request.js":"6","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\index.jsx":"7","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\leftNav\\index.jsx":"8","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recordrecru\\index.jsx":"9","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recommend\\index.jsx":"10","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\basicinfo\\index.jsx":"11","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recordrecom\\index.jsx":"12","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recruitment\\index.jsx":"13","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\index.jsx":"14","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\index.jsx":"15","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\contentbg\\contentbg.jsx":"16","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\publicjob\\PublicJob.jsx":"17","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\weather.js":"18","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\storageUtils.js":"19","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\timestamp.js":"20","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\publicrecomd\\PublicRecomd.jsx":"21","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\jobmanagementRecomd\\index.jsx":"22","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\jobmanagementRecruit\\index.jsx":"23","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\AddRole\\addRole.jsx":"24","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\ModifyRole\\modifyRole.jsx":"25","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\menuConfig.js":"26","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\ModifyUser\\ModifyUser.jsx":"27","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\AddUser\\AddUser.jsx":"28","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\basicinfo\\ProfileInfo\\ProfileInfo.jsx":"29"},{"size":363,"mtime":1608444327600,"results":"30","hashOfConfig":"31"},{"size":825,"mtime":1608477271024,"results":"32","hashOfConfig":"31"},{"size":3604,"mtime":1608789856875,"results":"33","hashOfConfig":"31"},{"size":572,"mtime":1608725663249,"results":"34","hashOfConfig":"31"},{"size":4621,"mtime":1609688194209,"results":"35","hashOfConfig":"31"},{"size":696,"mtime":1608969255668,"results":"36","hashOfConfig":"31"},{"size":1706,"mtime":1609601463106,"results":"37","hashOfConfig":"31"},{"size":8791,"mtime":1609579607903,"results":"38","hashOfConfig":"31"},{"size":222,"mtime":1608561323413,"results":"39","hashOfConfig":"31"},{"size":435,"mtime":1608876882258,"results":"40","hashOfConfig":"31"},{"size":4385,"mtime":1609772261841,"results":"41","hashOfConfig":"31"},{"size":222,"mtime":1608561234392,"results":"42","hashOfConfig":"31"},{"size":493,"mtime":1609047126770,"results":"43","hashOfConfig":"31"},{"size":5015,"mtime":1609510517711,"results":"44","hashOfConfig":"31"},{"size":5837,"mtime":1609480518975,"results":"45","hashOfConfig":"31"},{"size":615,"mtime":1608733335014,"results":"46","hashOfConfig":"31"},{"size":5701,"mtime":1609296355670,"results":"47","hashOfConfig":"31"},{"size":629,"mtime":1608787104339,"results":"48","hashOfConfig":"31"},{"size":672,"mtime":1608787957230,"results":"49","hashOfConfig":"31"},{"size":1114,"mtime":1609052549608,"results":"50","hashOfConfig":"31"},{"size":5488,"mtime":1609061359299,"results":"51","hashOfConfig":"31"},{"size":4472,"mtime":1609063544047,"results":"52","hashOfConfig":"31"},{"size":4999,"mtime":1609063585952,"results":"53","hashOfConfig":"31"},{"size":3116,"mtime":1609485847364,"results":"54","hashOfConfig":"31"},{"size":4311,"mtime":1609479985919,"results":"55","hashOfConfig":"31"},{"size":1323,"mtime":1609578727862,"results":"56","hashOfConfig":"31"},{"size":2212,"mtime":1609510432284,"results":"57","hashOfConfig":"31"},{"size":6176,"mtime":1609688988224,"results":"58","hashOfConfig":"31"},{"size":1985,"mtime":1609768404237,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"yhvvpx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\index.js",[],["124","125"],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\App.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\login\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\main\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\index.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\request.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\leftNav\\index.jsx",["126","127"],"import React, { Component } from 'react'\r\n\r\nimport { Link, withRouter } from \"react-router-dom\"\r\n\r\n// 引入模态框和菜单栏\r\nimport { Modal, Menu } from \"antd\"\r\n\r\n// 引入\r\nimport menus from \"../../utils/menuConfig\"\r\n\r\n// 引入时间戳\r\nimport { formatDate } from \"../../utils/timestamp.js\"\r\n\r\n// 引入样式\r\nimport \"./leftnav.less\"\r\nimport Logo from \"../../assets/image/fh.jpg\"\r\n\r\n// 引入本地localStorage\r\nimport methods from \"../../utils/storageUtils\"\r\n\r\n// 引入查询用户请求\r\nimport { QueryUserByUsername, QueryRoleByRoleType } from \"../../network/index\"\r\nimport Item from 'antd/lib/list/Item'\r\n\r\n// 定义模态框函数\r\nconst { confirm } = Modal\r\nconst { SubMenu } = Menu\r\n\r\nlet Interval\r\n\r\nclass LeftNav extends Component {\r\n    state = {\r\n        show: true,\r\n        showJob: true,\r\n        currentUser: '',\r\n        currentTime: '',\r\n        menusAuthList: []\r\n    }\r\n\r\n    // 获取当前用户的menusList\r\n    GetMenus = async () => {\r\n        const username = methods.getUser()\r\n        const result = await QueryUserByUsername(username);\r\n        const roleType = result.data[0].roleType;\r\n        // console.log(roleType);\r\n        const result2 = await QueryRoleByRoleType(roleType)\r\n        // console.log(result2.data);\r\n        if(result2.data.length!==0){\r\n            this.setState({\r\n                menusAuthList: result2.data[0].menu\r\n            })\r\n        }\r\n    }\r\n\r\n    // 判断是否授权\r\n    hasAuth=(item)=>{\r\n        const {key,isPublic}=item\r\n        const {currentUser,menusAuthList}=this.state;\r\n        /*\r\n        1. 如果当前用户是admin，则直接返回true\r\n        2. 如果当前item是公开的，则返回true\r\n        3. 如果当前用户有此item的权限：key在不在menus中，在的话则返回true\r\n        */\r\n       if(currentUser==='admin'|| isPublic || menusAuthList.indexOf(key)!==-1){\r\n           return true\r\n       }else if(item.children){\r\n           return !!item.children.find(child=>menusAuthList.indexOf(child.key)!==-1)\r\n       }\r\n       return false\r\n    }\r\n\r\n    // 根据menu的数据数组生成对应的标签数组\r\n    // 方法一：使用map+递归调用\r\n    getMenuNodes = (menus) => {\r\n        return menus.map((item, index) => {\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    return (\r\n                        <Menu.Item\r\n                            key={item.key}\r\n                        >\r\n                            <Link style={{ color: 'white' }} to={item.key}>\r\n                                <span>{item.title}</span></Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <SubMenu\r\n                            key={item.key}\r\n                            title={\r\n                                <span>{item.title}</span>\r\n                            }\r\n                            style={{ color: 'white' }}>\r\n                            {/* 递归调用 */}\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // 根据menu的数据数组生成对应的标签数组\r\n    // 方法二：使用reduce+递归调用\r\n    // getMenuNodes = (menus) => {\r\n    //     return menus.reduce((pre, item) => {\r\n    //         if (this.hasAuth(item)) {\r\n    //             // 向pre添加<Menu.Item>\r\n    //             if (!item.children) {\r\n    //                 pre.push((<Menu.Item\r\n    //                     key={item.key}\r\n    //                 >\r\n    //                     <Link style={{ color: 'white' }} to={item.key}>\r\n    //                         <span>{item.title}</span></Link>\r\n    //                 </Menu.Item>))\r\n    //             } else {\r\n    //                 // 向pre添加<SubMenu>\r\n    //                 pre.push((\r\n    //                     <SubMenu\r\n    //                         key={item.key}\r\n    //                         style={{ color: 'white' }}\r\n    //                         title={\r\n    //                             <span>{item.title}</span>\r\n    //                         }>\r\n    //                         {/* 递归调用 */}\r\n    //                         {this.getMenuNodes(item.children)}\r\n    //                     </SubMenu>\r\n    //                 ))\r\n    //             }\r\n\r\n    //             return pre\r\n    //         }\r\n\r\n    //     }, [])\r\n    // }\r\n\r\n\r\n    handleClick = () => {\r\n        let { show } = this.state;\r\n        show = !show\r\n        this.setState({ show })\r\n    }\r\n\r\n    jobManageClick = () => {\r\n        let { showJob } = this.state;\r\n        showJob = !showJob\r\n        this.setState({ showJob })\r\n\r\n    }\r\n\r\n    handlexitClick = (event) => {\r\n        // 去掉默认行为\r\n        event.preventDefault()\r\n        confirm({\r\n            title: '你确定要退出登录吗',\r\n            onOk: () => {\r\n                console.log('OK');\r\n                // 移除用户名\r\n                methods.removeUser()\r\n                // 跳转至首页\r\n                // console.log(this.props);\r\n                this.props.history.replace('/login')\r\n            },\r\n            onCancel: () => {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    getTime = () => {\r\n        const currentTime = formatDate(Date.now())\r\n        this.setState({ currentTime })\r\n    }\r\n\r\n    componentWillMount() {\r\n        // console.log(methods.getUser())\r\n        let currentUser = methods.getUser()\r\n        if (JSON.stringify(currentUser) == '{}') {\r\n            // 为空则跳转至登录页\r\n            this.props.history.replace('/login')\r\n        } else {\r\n            this.setState({ currentUser })\r\n        }\r\n        this.getTime()\r\n        // 获取当前用户列表\r\n        this.GetMenus()\r\n    }\r\n\r\n    componentDidMount() {\r\n        Interval = setInterval(() => {\r\n            this.getTime()\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(Interval)\r\n    }\r\n\r\n    render() {\r\n        // const { show,showJob } = this.state\r\n        // const display = show ? \"none\" : \"block\"\r\n        // const display2 =showJob?\"none\":\"block\"\r\n        const { currentUser, currentTime, menusAuthList } = this.state\r\n        // console.log(menusList);\r\n        return (\r\n            <div>\r\n                <div className=\"footer\">\r\n                    <img src={Logo} alt=\"logo\" className=\"logo\" />\r\n                    <Menu className=\"title\"\r\n                        mode=\"inline\"\r\n                        theme=\"light\" >\r\n                        {this.getMenuNodes(menus)}\r\n                    </Menu>\r\n\r\n                    {/* 手撕代码 */}\r\n                    {/* <div className=\"title\">\r\n                        <div><Link style={{ color: 'white' }} to=\"/Recommend\">内部推荐</Link></div>\r\n                        <div><Link style={{ color: 'white' }} to=\"/Recruit\">内部招聘</Link></div>\r\n                        <div onClick={this.handleClick} className=\"profile\">个人中心</div>\r\n                        <div className=\"showonly\" style={{ display: display }}>\r\n                            <div><Link style={{ color: 'white' }} to=\"/BasicInfo\">基本信息</Link></div>\r\n                            <div><Link style={{ color: 'white' }} to=\"/RecordRecru\">投递记录</Link></div>\r\n                            <div><Link style={{ color: 'white' }} to=\"/RecordRecom\">推荐记录</Link></div>\r\n                        </div>\r\n                        <div><Link style={{ color: 'white' }} to=\"/user\">用户管理</Link></div>\r\n                        <div><Link style={{ color: 'white' }} to=\"/role\">角色管理</Link></div>\r\n                        <div className=\"jobs\" onClick={this.jobManageClick}>职位管理</div>\r\n                        <div className=\"showJobs\" style={{display:display2}} >\r\n                            <div><Link style={{color:\"white\"}} to=\"/jobRecom\">内部推荐职位</Link></div>\r\n                            <div><Link style={{color:\"white\"}} to=\"/jobRecruit\">内部招聘职位</Link></div>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"user\">\r\n                        <div className=\"user-top\">\r\n                            <span>你好, {currentUser}</span><br />\r\n                            <a href=\"javascript;;\" onClick={this.handlexitClick}>退出</a>\r\n                        </div>\r\n                        <div className=\"user-bottom\">\r\n                            <p>{currentTime}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav)\r\n","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recordrecru\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recommend\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\basicinfo\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recordrecom\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\recruitment\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\contentbg\\contentbg.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\publicjob\\PublicJob.jsx",["128","129","130"],"import React, { Component } from 'react'\r\n\r\n// 引入CSS样式\r\nimport styles from \"./PublicJob.module.css\"\r\n\r\n// 引入职位请求模块\r\nimport { Jobs, JobsFindByDepart } from \"../../../network/index\"\r\n\r\n// 引入antd表单组件table\r\nimport { Table } from 'antd';\r\n\r\nexport default class PublicJob extends Component {\r\n    \r\n    state = {\r\n        jobs: []\r\n    }\r\n\r\n    // 加载所有请求函数\r\n    JobsAll = async () => {\r\n        let jobs = await Jobs()\r\n        jobs = jobs.data\r\n        this.setState({ jobs })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.JobsAll()\r\n    }\r\n\r\n    // 点击加载全部时的请求\r\n    showAllJobsClick = () => {\r\n        this.JobsAll()\r\n    }\r\n\r\n    // 点击所属机构时的数据显示\r\n    handleDepartClick = async (depart) => {\r\n        // 获取当前点击的机构名字\r\n        // console.log(depart)\r\n        // 在数据库中查找对应职位，并返回值，设置给state\r\n        const jobsFindDepart = await JobsFindByDepart(depart)\r\n        const jobs = jobsFindDepart.data\r\n        // 赋值给state\r\n        this.setState({ jobs })\r\n    }\r\n\r\n    // 展开所有部门的功能\r\n    showAllDepartsClick = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { jobs } = this.state\r\n        // console.log(jobs);\r\n        // const jobsDepart = []\r\n        // const arr=[{depart:'ws'},{depart:'qs'},{depart:'wes'},{depart:'wds'}]\r\n        const columns = [\r\n            {\r\n                title: '职位',\r\n                dataIndex: 'position',\r\n                key: 'position',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '薪资',\r\n                dataIndex: 'salary',\r\n                key: 'salary',\r\n            },\r\n            {\r\n                title: '机构',\r\n                dataIndex: 'depart',\r\n                key: 'depart',\r\n            },\r\n            {\r\n                title: '工作地点',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '发布时间',\r\n                key: 'date',\r\n                dataIndex: 'date'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: () => (\r\n                    <button>我要投递</button>\r\n                ),\r\n            },\r\n        ];\r\n        let Depart = [\"烽火通信\", \"网络产出线\", \"烽火超微\", \"宽带业务产出线\", \"线缆产出线\", \"成都大唐\", \"烽火海洋网络设备有限公司\", \"公共研发部\", \"微电子部\", \"国内销售部\", \"系统设备制造部\", \"云计算研发中心\", \"烽火网络\", \"烽火云创\", \"光谷智慧\", \"人力资源部\", \"科技与运营部\", \"战略与市场部\", \"烽火技服\", \"湖北楚天云\", \"南京烽火星空\", \"烽火集成\"];\r\n        jobs.map((element) => {\r\n            Depart.push(element.depart)\r\n        })\r\n        let newDepart = [...new Set(Depart)]\r\n        return (\r\n            <div className={styles.publicJob}>\r\n                <div className={styles.depart}>\r\n                    <div className={styles.left}>所属机构</div>\r\n                    <input type=\"checkbox\" name='' value='' />\r\n                    <span>展开</span>\r\n                    <div className={styles.right}>\r\n                        {/* {jobsDepart} */}\r\n                        <a href=\"javaScript:;\" onClick={this.showAllJobsClick}>全部职位</a>\r\n                        {newDepart.map((element, index) => {\r\n                            return <a key={index} onClick={() => this.handleDepartClick(element)}>{element}</a>\r\n                        })}\r\n                    </div>\r\n                    {/* <input type=\"checkbox\" name='' value='' /> */}\r\n                    {/* <div className={styles.right}> */}\r\n                    {/* <input type=\"checkbox\" name='' value='' />\r\n                    <span>展开</span> */}\r\n                    {/* </div> */}\r\n                   \r\n                </div>\r\n                <Table columns={columns} dataSource={jobs}\r\n                    pagination={\r\n                        {\r\n                            defaultCurrent: 1,\r\n                            defaultPageSize: 7\r\n                        }\r\n                    }\r\n                />\r\n                {/* <Pagination defaultPageSize='1' /> */}\r\n                {\r\n                    // 手撕写法。。。\r\n                /* <table className={styles.section}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>职位</th>\r\n                            <th>薪资</th>\r\n                            <th>机构</th>\r\n                            <th>工作地点</th>\r\n                            <th>发布时间</th>\r\n                            <th>操作</th>\r\n                        </tr>\r\n                        {\r\n                            jobs.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td><a href=\"JavaScript:;\">{item.position}</a> </td>\r\n                                        <td>{item.salary}</td>\r\n                                        <td>{item.depart}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>{item.date}</td>\r\n                                        <td><button>我要投递</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\network\\weather.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\storageUtils.js",["131"],"// 用来进行local数据存储管理的工具模块\r\n\r\n// import store from \"store\"; --该库兼容性更好些\r\n\r\nconst USER_KEY=\"user_key\"\r\n\r\nexport default{\r\n    // 保存用户信息\r\n    saveUser(user){\r\n        localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        // store.set(USER_KEY,user)--兼容性更好些\r\n    },\r\n    // 读取用户信息\r\n    getUser(){\r\n        return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        // return store.get(USER_KEY)||{} --兼容性更好些\r\n    },\r\n    // 删除用户信息\r\n    removeUser(){\r\n        localStorage.removeItem(USER_KEY)\r\n        // store.remove(USER_KEY) --兼容性更好些\r\n    }\r\n}","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\timestamp.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\components\\content\\publicrecomd\\PublicRecomd.jsx",["132","133","134","135"],"import React, { Component } from 'react'\r\n\r\n// 引入CSS样式\r\nimport styles from \"./PublicJob.module.css\"\r\n\r\nimport \"./iii.css\"\r\n\r\n// 引入职位请求模块\r\nimport { Recomds, RecomdsFindByDepart } from \"../../../network/index\"\r\n\r\n// 引入antd表单组件table\r\nimport { Table } from 'antd';\r\n\r\nexport default class PublicJob extends Component {\r\n\r\n    state = {\r\n        recomds: []\r\n    }\r\n\r\n    // 加载所有请求函数\r\n    RecomdsAll = async () => {\r\n        let recomds = await Recomds()\r\n        recomds = recomds.data\r\n        this.setState({ recomds })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.RecomdsAll()\r\n    }\r\n\r\n    // 处理点击全部时显示所有职位\r\n    showAllClick = () => {\r\n        this.RecomdsAll()\r\n    }\r\n\r\n    // 定义点击所属机构时显示对应职位名称\r\n    handleRecomdDepartClick = async (depart) => {\r\n        // 获取当前点击的机构名字\r\n        console.log(depart)\r\n        // 在数据库中查找对应职位，并返回值，设置给state\r\n        const recomdsFindDepart = await RecomdsFindByDepart(depart)\r\n        const recomds = recomdsFindDepart.data\r\n        // 赋值给state\r\n        this.setState({ recomds })\r\n    }\r\n\r\n    render() {\r\n        const { recomds } = this.state\r\n        // console.log(recomds);\r\n        let Depart = [\"烽火通信\", \"网络产出线\", \"烽火超微\", \"宽带业务产出线\", \"线缆产出线\", \"成都大唐\", \"烽火海洋网络设备有限公司\", \"公共研发部\", \"微电子部\", \"国内销售部\", \"系统设备制造部\", \"云计算研发中心\", \"烽火网络\", \"烽火云创\", \"光谷智慧\", \"人力资源部\", \"科技与运营部\", \"战略与市场部\", \"烽火技服\", \"湖北楚天云\", \"南京烽火星空\", \"烽火集成\"];\r\n        recomds.map((element) => {\r\n            Depart.push(element.depart)\r\n        })\r\n        let newDepart = [...new Set(Depart)]\r\n        const columns = [\r\n            {\r\n                title: '职位',\r\n                dataIndex: 'position',\r\n                key: 'position',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '薪资',\r\n                dataIndex: 'salary',\r\n                key: 'salary',\r\n            },\r\n            {\r\n                title: '机构',\r\n                dataIndex: 'depart',\r\n                key: 'depart',\r\n            },\r\n            {\r\n                title: '工作地点',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '发布时间',\r\n                key: 'date',\r\n                dataIndex: 'date'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: () => (\r\n                    <button>我要推荐</button>\r\n                ),\r\n            },\r\n        ];\r\n        // const jobsDepart = []\r\n        // const arr=[{depart:'ws'},{depart:'qs'},{depart:'wes'},{depart:'wds'}]\r\n        return (\r\n            <div className={styles.publicJob}>\r\n                <div className={styles.depart}>\r\n                    <div className={styles.left}>所属机构</div>\r\n                    <input type=\"checkbox\" name='' value='' />\r\n                    <span>展开</span>\r\n                    <div className={styles.right}>\r\n                        {/* {jobsDepart} */}\r\n                        <a href=\"\" onClick={this.showAllClick}>全部职位</a>\r\n                        {newDepart.map((element, index) => {\r\n                            return (\r\n                                <a key={index} onClick={() => this.handleRecomdDepartClick(element)}>{element}</a>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <Table\r\n                    className={styles.section}\r\n                    columns={columns} dataSource={recomds}\r\n                    pagination={\r\n                        {\r\n                            defaultCurrent: 1,\r\n                            defaultPageSize: 7\r\n                        }\r\n                    }\r\n                />\r\n\r\n                {\r\n                // 手撕的代码。。。\r\n                /* <table className={styles.section}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>职位</th>\r\n                            <th>薪资</th>\r\n                            <th>机构</th>\r\n                            <th>工作地点</th>\r\n                            <th>发布时间</th>\r\n                            <th>操作</th>\r\n                        </tr>\r\n                        {\r\n                            recomds.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td><a href=\"JavaScript:;\">{item.position}</a> </td>\r\n                                        <td>{item.salary}</td>\r\n                                        <td>{item.depart}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>{item.date}</td>\r\n                                        <td><button>我要推荐</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\jobmanagementRecomd\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\jobmanagementRecruit\\index.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\AddRole\\addRole.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\rolemanagement\\ModifyRole\\modifyRole.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\utils\\menuConfig.js",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\ModifyUser\\ModifyUser.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\usermanagement\\AddUser\\AddUser.jsx",[],"D:\\Microsoft VS Code\\practice and training\\2021Project\\react-project\\src\\pages\\basicinfo\\ProfileInfo\\ProfileInfo.jsx",["136","137","138","139","140","141"],"import React, { Component } from 'react'\r\n\r\n// 引入css样式\r\nimport Style from \"./ProfileInfo.module.css\"\r\n\r\n// 引入发布订阅\r\nimport PubSub from \"pubsub-js\"\r\n\r\n// 引入本地localStorage\r\nimport methods from \"../../../utils/storageUtils\"\r\n\r\n//引入查询用户请求\r\nimport { QueryUserByUsername} from \"../../../network/index\"\r\n\r\n// 引入头像\r\nimport userHeader from \"../../../assets/image/user-header.jpg\"\r\n\r\n\r\nexport default class ProfileInfo extends Component {\r\n    state={\r\n        usersInfo:[]\r\n    }\r\n\r\n    // 请求用户信息\r\n    GetUserInfo=async()=>{\r\n        const username = methods.getUser()\r\n        const result = await QueryUserByUsername(username);\r\n        PubSub.publish(\"getUserDetail\",result.data)\r\n        this.setState({\r\n            usersInfo:result.data\r\n        })\r\n    }\r\n\r\n    // 生命周期内请求用户信息\r\n    componentDidMount(){\r\n        this.GetUserInfo();\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.usersInfo);\r\n        const {usersInfo}=this.state\r\n        // console.log(usersInfo);\r\n        if(usersInfo.length!==0){\r\n            var {email,username,realname,phoneNumber,depart,id}=usersInfo[0]\r\n        }else{\r\n            var email,username,realname,phoneNumber,depart,id=''\r\n        }\r\n        // var email='123'\r\n        return (\r\n            <div className={Style.profileinfo}>\r\n                <img src={userHeader} alt=\"\"/>\r\n                <div className={Style.username}>{realname}</div>\r\n                <div className={Style.userinfo}>\r\n                    <div><span>电子信箱:</span>{email}</div>\r\n                    <div><span>用户名:</span>{username}</div>\r\n                    <div><span>联系电话:</span>{phoneNumber}</div>\r\n                    <div><span>所属部门:</span>{depart}</div>\r\n                    <div><span>推荐理由:</span></div>\r\n                    <div><span>员工编号:</span>{id}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":75,"column":40,"nodeType":"148","messageId":"149","endLine":75,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":179,"column":41,"nodeType":"152","messageId":"153","endLine":179,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":61,"column":33,"nodeType":"156","endLine":61,"endColumn":36},{"ruleId":"146","severity":1,"message":"157","line":92,"column":28,"nodeType":"148","messageId":"158","endLine":92,"endColumn":30},{"ruleId":"154","severity":1,"message":"155","line":106,"column":36,"nodeType":"156","endLine":106,"endColumn":99},{"ruleId":"159","severity":1,"message":"160","line":7,"column":1,"nodeType":"161","endLine":23,"endColumn":2},{"ruleId":"146","severity":1,"message":"157","line":51,"column":31,"nodeType":"148","messageId":"158","endLine":51,"endColumn":33},{"ruleId":"154","severity":1,"message":"155","line":60,"column":33,"nodeType":"156","endLine":60,"endColumn":36},{"ruleId":"154","severity":1,"message":"162","line":100,"column":25,"nodeType":"156","endLine":100,"endColumn":64},{"ruleId":"154","severity":1,"message":"155","line":103,"column":33,"nodeType":"156","endLine":103,"endColumn":102},{"ruleId":"163","severity":1,"message":"164","line":46,"column":17,"nodeType":"165","messageId":"166","endLine":46,"endColumn":22},{"ruleId":"163","severity":1,"message":"167","line":46,"column":23,"nodeType":"165","messageId":"166","endLine":46,"endColumn":31},{"ruleId":"163","severity":1,"message":"168","line":46,"column":32,"nodeType":"165","messageId":"166","endLine":46,"endColumn":40},{"ruleId":"163","severity":1,"message":"169","line":46,"column":41,"nodeType":"165","messageId":"166","endLine":46,"endColumn":52},{"ruleId":"163","severity":1,"message":"170","line":46,"column":53,"nodeType":"165","messageId":"166","endLine":46,"endColumn":59},{"ruleId":"163","severity":1,"message":"171","line":46,"column":60,"nodeType":"165","messageId":"166","endLine":46,"endColumn":62},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-redeclare","'email' is already defined.","Identifier","redeclared","'username' is already defined.","'realname' is already defined.","'phoneNumber' is already defined.","'depart' is already defined.","'id' is already defined.","no-global-assign","no-unsafe-negation"]